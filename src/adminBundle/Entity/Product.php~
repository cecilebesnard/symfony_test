<?php

namespace adminBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Product
 *
 * @ORM\Table(name="product")
 * @ORM\Entity(repositoryClass="adminBundle\Repository\ProductRepository")
 * @ORM\EntityListeners({"adminBundle\Listener\ProductListener"})
 */
class Product
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="titleFR", type="string", length=100)
     * @Assert\NotBlank()
     * @Assert\Length(
     *      min = 5,
     *      max = 100,
     *      minMessage = "Votre titre doit contenir au moins {{ limit }} caracteres",
     *      maxMessage = "Votre titre doit contenir au maximum {{ limit }} caractères"
     * )
     */
    private $titleFR;

    /**
     * @var string
     *
     * @ORM\Column(name="titleEN", type="string", length=100)
     * @Assert\NotBlank()
     * @Assert\Length(
     *      min = 5,
     *      max = 100,
     *      minMessage = "Votre titre doit contenir au moins {{ limit }} caracteres",
     *      maxMessage = "Votre titre doit contenir au maximum {{ limit }} caractères"
     * )
     */
    private $titleEN;

    /**
     * @var string
     *
     * @ORM\Column(name="descriptionFR", type="text")
     * @Assert\NotBlank()
     * *@Assert\Length(
     *      max = 300,
     *      maxMessage = "Votre titre doit contenir au maximum {{ limit }} caractères"
     * )
     */
    private $descriptionFR;

    /**
     * @var string
     *
     * @ORM\Column(name="descriptionEN", type="text")
     * @Assert\NotBlank()
     * *@Assert\Length(
     *      max = 300,
     *      maxMessage = "Votre titre doit contenir au maximum {{ limit }} caractères"
     * )
     */
    private $descriptionEN;


    /**
     * @var float
     *
     * @ORM\Column(name="price", type="float")
     * @Assert\NotBlank()
     * @Assert\GreaterThan(
     *     value = 0,
     *     message = "Le prix doit etre superieur {{ compared_value }}"
     * )
     */
    private $price;

    /**
     * @var float
     *
     * @ORM\Column(name="quantity", type="integer")
     * @Assert\NotBlank()
     */
    private $quantity;

    /**
     * @Assert\NotBlank()
     * @ORM\ManyToOne(targetEntity="Brand")
     *
     * @ORM\JoinColumn(name="id_brand", referencedColumnName="id", nullable=false)
     */
    private $marque;


    /**
     * @Assert\NotBlank()
     * @ORM\ManyToMany(targetEntity="Categorie" , inversedBy="products")
     * @ORM\JoinTable(name="products_categories")
     */
    private $categories;

    /**
     * @var datetime
     *
     * @ORM\Column(name="createdAt", type="datetime")
     *
     */
    private $createdAt;

    /**
     * @var datetime
     *
     * @ORM\Column(name="updateAt", type="datetime")
     *
     */
    private $updateAt;


    /**
     * @var string
     *
     * @ORM\Column(name="image", type="string")
     *
     */
    private $image;

}