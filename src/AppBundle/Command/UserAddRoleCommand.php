<?php
/**
 * Created by PhpStorm.
 * User: wamobi10
 * Date: 26/01/17
 * Time: 11:54
 */

namespace AppBundle\Command;


use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

class UserAddRoleCommand extends ContainerAwareCommand
{
    protected function configure()
    {
        $this
            ->setName('app:user:role:add')
            ->setDescription('Add role to an user')
            //nom, statut optionnel ou pas, message erreur
            ->addArgument('username', InputArgument::REQUIRED, 'Define Username')
            ->addArgument('role', InputArgument::REQUIRED, 'Define Role')
        ;
        // optionnel
        parent::configure(); // TODO: Change the autogenerated stub
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        //input correspond au arguments reçu et ouput à ce que l'on renvoi

        // recuperation des valeurs saisies en argument de la commande
        $username = $input->getArgument('username');
        $role = $input->getArgument('role');

        //accés au container grace à l'extends de ContainerAwareCommand
        $container = $this->getContainer();
        $doctrine = $container->get('doctrine');
        $em = $doctrine->getManager();


        // Désactivation de l'écouteur de "preUpdate" pour pouvoir utiliser la commande si erreur : Error: Call to a member function guessExtension() on a non-object "
        //$em->getClassMetaData('AppBundle:User')->entityListeners; // récupération des écouteurs (pour les visualiser grâce au dump)
        //unset($em->getClassMetaData('AppBundle:User')->entityListeners['preUpdate']); // suppression de l'écouteur qui pose pb
        //dump($em->getClassMetaData('AppBundle:User')->entityListeners); exit;

        //accés aux entites via doctrine
        $rcUser = $doctrine->getRepository('AppBundle:User')->findOneBy([
            'username' => $username
        ]);

        $rcRole = $doctrine->getRepository('AppBundle:Role')->findOneBy([
            'name' => 'ROLE_'. strtoupper($role)
        ]);

        // modification du role dans l'entité
        $rcUser->addRole($rcRole);

        $em->persist($rcUser);
        $em->flush();

        $output->writeln("$username // $role");

        // a passer en commentaire
        //parent::execute($input, $output); // TODO: Change the autogenerated stub
    }

}